"""
Django settings for success project.

Generated by 'django-admin startproject' using Django 3.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from django.contrib import messages
import os

conn_str='dbname=mathira-database host=mathira-server.postgres.database.azure.com port=5432 sslmode=require user=qwqtwwwwxk password=35B1F0VQA518GKVR$'
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-k@+^29)=-$b9uojm4d!xln+)x=w714i@x(+!^1-d1-!cv@l^m$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*'
                 ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'appointment',
    'busary',
    'oppotunity',
    'overseas',
    'events',
    'proffessionals',
    'projects',
    'authentication',
    'staff'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'success.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'success.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# Retrieve the MySQL connection string from environment variable
# conn_str = os.environ['AZURE_MYSQL_CONNECTIONSTRING']
# conn_str_params = {pair.split('=')[0]: pair.split('=')[1] for pair in conn_str.split(';')}

# # Update the Django DATABASES setting for MySQL
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': conn_str_params['Database'],
#         'HOST': conn_str_params['Server'],
#         'USER': conn_str_params['User Id'],
#         'PASSWORD': conn_str_params['Password'],
#         'PORT': conn_str_params.get('Port', '3306'),  # MySQL default port is 3306
#         'OPTIONS': {
#             'ssl': {
#                 'ca': conn_str_params.get('sslca'),
#                 'cert': conn_str_params.get('sslcert'),
#                 'key': conn_str_params.get('sslkey')
#             }
#         }
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'hostinger',
        'HOST': 'localhost',
        'USER': 'davi',
        'PASSWORD': 'fjdksl',
        'PORT': '',  # MySQL default port is 3306
       
        }
    }
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'success/static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'static')


MESSAGE_TAGS = {
    messages.ERROR: 'danger'
}

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'



# email stuff
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'anclemain@gmail.com'
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'anclemain@gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_PASSWORD = 'gyup nqxi nvnh ygkh'


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


MEDIA_URL='/success/'
MEDIA_ROOT=os.path.join(BASE_DIR,'success')

SESSION_COOKIE_AGE=1800

SESSION_SAVE_EVERY_REQUEST=True
